// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  CREATE
  AGREEMENT
  COLLECT
  DONE
  CANCEL
  REWORK
  DELETED
}

enum Role {
  EMPLOYEE
  MANAGER
  ADMIN
}

model User {
  id          Int         @default(autoincrement()) @id
  name        String
  department  String?
  email       String      @unique
  password    String      
  role        Role        @default(EMPLOYEE)
  group       WorkGroup[]
  history     History[]
}

model WorkGroup {
  id          Int         @default(autoincrement()) @id
  users       User[]
  task        Task        @relation(fields: [taskId], references: [id])
  taskId      Int         @unique
  history     History[]
  doneDate    DateTime?
  deleteDate  DateTime?
  activeWork  Boolean     @default(true)
}

model Document {
  id          Int         @id @default(autoincrement())
  number      String      
  url         String
  name        String?      
  task        Task        @relation(fields: [taskId], references: [id])
  taskId      Int
}

model Task {
  id          Int         @default(autoincrement()) @id
  statusStage Status      @default(CREATE)
  name        String?      
  email       String?
  phone       String?
  urlCV       String?
  jobTitle    String?
  srcCV       String?
  description String?
  createDate  String?
  documents   Document[]
  group       WorkGroup?
}

model History {
  id          Int         @default(autoincrement()) @id   
  group       WorkGroup   @relation(fields: [groupId], references: [id])
  groupId     Int
  user        User        @relation(fields: [userId], references: [id])
  userId      Int         
  fieldName   String
  oldValue    String?
  newValue    String?
  updatedAt   DateTime    @default(now())
}
