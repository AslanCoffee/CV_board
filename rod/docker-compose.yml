version: "3.9"

services:
  postgres:
    container_name: nestjs-postgres
    image: postgres:latest
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
      # PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: nestjs-postgres
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5432:5432"
    # env_file:
    #   - .env
    networks:
      nestjs-network:
        ipv4_address: 172.18.0.2
    volumes:
      - postgres-data:/var/lib/postgresql/data

  backend:
    build:
      context: ./cv_board
      dockerfile: Dockerfile
    container_name: nestjs_backend
    env_file:
      - .env
    environment:
      # DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      # JWT_SECRET: cat
      # JWT_EXPIRATION_TIME: 168000000
      DATABASE_URL: "postgresql://admin:admin@postgres:5432/nestjs-postgres?schema=public"
      JWT_SECRET: "cat"
      JWT_EXPIRATION_TIME: "168000000"
      POSTGRES_HOST_AUTH_METHOD: md5
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    networks:
      nestjs-network:
        ipv4_address: 172.18.0.3
    command: >
      sh -c "npx prisma generate &&
             npx prisma migrate deploy &&
             npm run start:prod"

  frontend:
    build:
      context: ./cv_board_client
      dockerfile: Dockerfile
    container_name: vuejs_frontend
    ports:
      - "8080:80"
    networks:
      nestjs-network:
        ipv4_address: 172.18.0.4

  prisma-studio:
    image: node:16-alpine
    container_name: prisma_studio
    working_dir: /app
    volumes:
      - ./cv_board:/app
    environment:
      DATABASE_URL: "postgresql://admin:admin@postgres:5432/nestjs-postgres?schema=public"
    depends_on:
      - postgres
    ports:
      - "5555:5555"
    networks:
      nestjs-network:
        ipv4_address: 172.18.0.5
    command: sh -c "npx prisma studio --port 5555"

networks:
  nestjs-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  postgres-data:
